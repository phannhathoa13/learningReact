‚úÖ M·ª•c 7: Form v√† x·ª≠ l√Ω d·ªØ li·ªáu nh·∫≠p
üß† C√¢u h·ªèi:
Controlled component l√† g√¨?
=> C√°c input s·∫Ω ƒë∆∞·ª£c qu·∫£n l√≠ b·ªüi React ƒë·ªÉ ƒëi·ªÅu ch·ªânh UI ƒë√∫ng v·ªõi state
e.preventDefault() d√πng ƒë·ªÉ l√†m g√¨?
=> tr√°nh b·ªã refresh l·∫°i trang khi t√¥i submit form
L√†m sao ƒë·ªÉ bind nhi·ªÅu input v·ªõi state?
=> kh·ªüi t·∫°o 1 object useState v√† 1 function setState r·ªìi d√πng n√≥ g·∫Øn cho c√°c input

üß™ B√†i t·∫≠p:
Form nh·∫≠p t√™n + tu·ªïi ‚Üí hi·ªÉn th·ªã k·∫øt qu·∫£ b√™n d∆∞·ªõi.
=> function ShowFormInputNameAndAge() {
const [userData, setUserData] = useState({
name: "",
age: 0
})

function handleInputChange(e) {
setUserData({
...userData,
[e.target.name]: e.target.value
})
}

return (
<div>
  <form>
    <label htmlFor="name">Your name: {userData.name}</label>
    <br />
    <input type="text" name="name" value={userData.name} onChange={handleInputChange} />
    <br />
    <label htmlFor="age">Your age: {userData.age}</label>
    <br />
    <input type="number" name="age" value={userData.age} onChange={handleInputChange} />
  </form>
</div>
)
}
Form c√≥ c√°c input: t√™n, email, gi·ªõi t√≠nh (radio), s·ªü th√≠ch (checkbox).
Submit form -> in ra object userData.
=> function ShowFormInputNameAndAge() {
const [userData, setUserData] = useState({
name: "",
age: "",
gender: "",
hobbies: []
})

const handleInput = (e) => {
handleInputChange(e, setUserData, userData);
}

return (
<div>
  <form>
    <label htmlFor="name">Your Name</label><br />
    <input type="text" name="name" value={userData.name} placeholder="Name..." onChange={handleInput} /><br />

    <label htmlFor="age">Your Age</label><br />
    <input type="number" name="age" placeholder="Age..." value={userData.age} onChange={handleInput} /><br />

    <label htmlFor="gender">Choose Gender</label><br />
    <input type="radio" name="gender" value={"Female"} onChange={handleInput} />Female
    <input type="radio" name="gender" value={"Male"} onChange={handleInput} />Male<br />

    <label htmlFor="hobbies">Choose Hobbies</label><br />
    <input type="checkbox" name="hobbies" value={"Singing"} onChange={handleInput} />Singing
    <input type="checkbox" name="hobbies" value={"Gaming"} onChange={handleInput} />Gaming
    <input type="checkbox" name="hobbies" value={"Coding"} onChange={handleInput} />Coding
    <br />
    <input type="submit" value="Submit" onClick={(e)=> {
    e.preventDefault();
    console.log(userData)
    }} />
  </form>
</div>
)
}

function handleInputChange(e, setUserData, userData) {
const { type, checked } = e.target;
if (type == "checkbox") {
if (checked) {
setUserData({
...userData,
hobbies: [...userData.hobbies, e.target.value]
})
}
else {
setUserData({
...userData,
hobbies: userData.hobbies.filter((hobby) => hobby !== e.target.value)
})
}
}
else {
setUserData({
...userData,
[e.target.name]: e.target.value
})
}
}


Vi·∫øt component SearchBox l·ªçc danh s√°ch theo t·ª´ kho√°.