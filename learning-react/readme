✅ Mục 3: State & Event
🧠 Câu hỏi:
useState là gì? Làm sao để cập nhật giá trị?
    => useState là 1 hàm của React nó dùng để lưu giá trị và sẽ chạy lại UI khi có sự thay đổi
    => Để cập nhật giá trị: ta sẽ dùng setState để cập nhật giá trị và setState sẽ re-render lại compoents

State thay đổi thì component có render lại không?
    => Có

Sự kiện trong React khác gì so với HTML? // hay
    => Sự kiện trong React sẽ nhận trực tiếp function và tôi có thể xử lí logic, và chèn nhiều đoạn code js
    vào, và cũng có thể cập nhật lại UI bằng cách return về jsx
    => Sự kiện trong html thì ko thể nhận trực tiếp funtion nên tôi ko thể xử lí logic hoặc chèn js vào được, 
    HTML chỉ nhận 1 chuỗi JS 

🧪 Bài tập:
Làm một Counter có nút tăng/giảm/reset.
    => function Counter() {
  let [count, setCount] = useState(0);

  return (
    <div>
      You clicked {count} time
      <button onClick={() => setCount(count + 1)}>Increase</button>
      <button onClick={() => setCount(count - 1)}>Decrease</button>
      <button onClick={() => setCount(count = 0)}>Reset</button>
    </div>
  )
}

Ô nhập tên người dùng + nút "Hiển thị tên" (có dùng state).
    => function DisplayTextInput() {
  const [textInput, setTextInput] = useState("");
  const [showMassage, setShowMassage] = useState(false);
  return (
    <div>
      <input type="text" placeholder="Enter your name" onInput={(event) => setTextInput(event.target.value)} />
      <button onClick={() => setShowMassage(!showMassage)}>Hiển thị tên</button>
      {showMassage ? <p>Hello {textInput}</p> : null}
    </div>
  )
}

Component bật/tắt đèn (true/false → hiển thị trạng thái).
    => function ChangeStateDisplay() {
  const [isDark, setIsDark] = useState(false);
  return (
    <>
      <button onClick={() => setIsDark(!isDark)}>
        {isDark ? "Light Mode" : "Dark Mode"}
      </button>
      {isDark ? setColorBackGround("black") : setColorBackGround("white")}
    </>
  )
}

    => function setColorBackGround(color) {
  return (
    <div style={{ backgroundColor: color, width: "400px", height: "400px" }}></div>
  )
}

Thử viết một nút "Đổi màu nền" mỗi lần click. // học ramdom trong js để làm
=> function ChangeColorDisplay() {
  const [colorState, setColorState] = useState(false);

  let x = getRamdomNumber();
  let y = getRamdomNumber();
  let z = getRamdomNumber();

  return (
    <div>
      <button onClick={() => setColorState(!colorState)}>Change Color</button>
      {colorState ? setRGBBackgroundColor(x, y, z) : null}
    </div>
  )
}

=>  function getRamdomNumber() {
    return Math.floor(Math.random() * 256);
    }
=>  function setRGBBackgroundColor(x, y, z) {
    return (
        <div style={{ backgroundColor: `rgb(${x},${y},${z})`, width: "400px", height: "400px" }}></div>
    )
    }