✅ Mục 8: React Router

🧠 Câu hỏi:
Cấu trúc route đơn giản trong React như thế nào?
    => Sẽ gồm BrowserRouter, công dụng là gói toàn bộ URL 
    => gồm Routes, công dụng sẽ là bao bọc các Route
    => Gồm Route, công dụng gồm : 
        => path= "" là đường dẫn ngay trang đó và element = {Components} hiển thị components tương ứng
        Ví dụ : <Route path = "/" element = {<Home />} /> "/" có nghĩa là trang chính 
useParams và useNavigate dùng để làm gì?
    => useParam dùng để lấy thông tin từ trên đường dẫn
        => Khi nào sử dụng : 
            - Là khi tôi muốn lấy các Id hoặc các thông tin sản phẩm
            Để có thể gọi api hoặc render đúng sản phẩm hoặc Id đó
    => useNavigate là dùng để chuyển sang trang mới bằng cách thay đổi URL,
        mà không bị reload lại cả trang

🧪 Bài tập:
Tạo 3 trang: Home, About, Contact → Điều hướng bằng <Link>.
    => Trang chính điều hướng các trang App.js
        => function App() {
    return (
        <BrowserRouter>
            <Routes>
                <Route path='/' element={<Home />} />
                <Route path="/about" element={<About />} />
                <Route path='/contact' element={<Contact />} />
            </Routes>
        </BrowserRouter>
    );
}

    => Trang Home.jsx
        function Home () {
        return (
            <>
            <h1>Home</h1>
            <Link to='/about'>About </Link>
            </>
        )
        }
        export default Home
    
     => Trang About.jsx
        function About () {
        return (
            <>
            <h1>About </h1>
            <Link to='/contact'>Contact</Link>
            </>
        )
        }
        export default About
    
     => Trang Contact.jsx
        function Contact () {
        return (
            <>
            <h1>Contact</h1>
            <Link to='/'>Home</Link>
            </>
        )
        }

        export default Contact


Trang UserDetail lấy ID từ URL: /users/:id.
    => các flow làm :
        => Đầu tiên bên trang cần chuyển sang trang tiếp thì phải gắn đường dẫn navigate trước
        const navigate = useNavigate()
        const handleClick = () => {
            const userId = 1
            navigate(`/users/${userId}`)
        }
        => Sau đó qua trang app.js chính tôi phải tạo đường dẫn cho nó
            -  <Route path='/users/:id' element={<UserDetail />} />
        
        => Cuối cùng là lấy giá trị từ param bên trang UserDetail
            -   function UserDetail () {
            const { id } = useParams()
            return (
                <>
                <h1>Hello {id} </h1>
                </>
            )
            }

Tạo trang 404 khi URL không đúng.
    => Trong app.js ( path = * có nghĩa là các đường dẫn không tồn tại, và phải được đặt cuối cùng)
        <Route path='*' element={<NotFound />} />
    
    => Trong NotFound.jsx
        function NotFound () {
        return (
            <div className='page-404'>
            <h2>404</h2>
            <p>This page is not existed</p>
            </div>
        )
        }
        export { NotFound }


Dùng useNavigate() để chuyển trang sau 3s (giống redirect).
    => function RedirectPage () {
  const [count, setCount] = useState(-1)
  const navigate = useNavigate()

  const handleClick = () => {
    setCount(4)
  }

  useEffect(() => {
    if (count == -1) {
      return
    }
    const interval = setInterval(() => {
      setCount(count - 1)
    }, 1000)
    console.log(count)
    if (count == 0) {
      navigate(`/about`)
    }
    return () => {
      clearInterval(interval)
    }
  }, [count])

  return (
    <div>
      <button onClick={handleClick}>Switch Page</button>
      {count > 0 && <p>Navigate to about in {count}s</p>}
    </div>
  )
}

✅ Học React Router theo flow sau:
    Bước	Chủ đề	            Có gì cần học
    1	Setup Routes	        BrowserRouter, Routes, Route
    2	Di chuyển trang	        Link, useNavigate()
    3	Route động	            :id, useParams()
    4	Nested routes	        Outlet, layout page
    5	404 page	            path="*"
    6	Redirect sau form	    Gửi xong → navigate("/thankyou")

